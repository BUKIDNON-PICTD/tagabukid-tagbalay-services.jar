import com.rameses.annotations.*;
import com.rameses.services.extended.*;
import java.rmi.server.*;


class TagabukidTagBalayListService extends ActiveCrudListService  {

	@ActiveDB(value='tagbalay', em='tagabukid_tagbalay')
	def em

	@Service("DateService")
	def dateSvc;

	@Service('UserRoleService') 
    def userRoleSvc; 

	@Env
	def env;

	@ProxyMethod
	public def getNodes(o) {
		def nodes = [];
		// nodes << [name:'idle',  caption: 'Idle', leaf:true, allowSearch:true, folder:true];
		// nodes << [name:'outgoing',  caption: 'Outgoing', leaf:true, allowSearch:true, folder:true];
		// nodes << [name:'enroute', caption: 'En Route', leaf:true, allowSearch:true, folder:true];
		// nodes << [name:'processing', caption: 'Processing', leaf:true, allowSearch:true, folder:true];
		// nodes << [name:'archived', caption: 'Archived', leaf:true, allowSearch:true, folder:true];
		// nodes << [name:'closed', caption: 'Closed', leaf:true, allowSearch:true, folder:true];
		// nodes << [name:'attached', caption: 'Attached', leaf:true, allowSearch:true, folder:true];
		// if (userRoleSvc.getUsers( [domain:'SUBAY', roles:'MASTER'] ).collect {it.objid}.contains(env.USERID)){
		// 	nodes << [name:'all', caption: 'ALL Documents', leaf:true, allowSearch:true, folder:true];
		// }

		return nodes;
	}	

	@ProxyMethod
	public def getColumns(o) {
		def cols = [];
		cols <<	[name:'hin', caption:'HIN', width:120, resizable:false];
		cols <<	[name:'state', caption:'State', width:120, resizable:false];
		cols <<	[name:'tagbalay.pangulo.name', caption:'Pangulo', width:130];
		cols <<	[name:'tagbalay.address.text', caption:'Pangulo Address', width:130];
		cols << [name:'surveydate', caption:'Survey Date', width:130, resizable:false];
		cols <<	[name:'recordlog.datecreated', caption:'Date Created', width:130, resizable:false];
		cols <<	[name:'recordlog.createdbyuser', caption:'Created by', width:130];
		return cols;
	}
	
	public void beforeList(o) {
		o._pagingKeys = "objid";
		o.filter = '';
		//int activeyear = dateSvc.getServerYear();
		// def userorgid  = dtssvc.getUserOrg(env.USERID).org.objid;
		// o.userorgid = userorgid;

		
		// o.filter += ''' AND (d.din LIKE $P{searchtext}
		// OR d.title LIKE $P{searchtext}
		// OR d.description LIKE $P{searchtext} 
		// OR d.recordlog_createdbyuser LIKE $P{searchtext}) '''

		
		

		switch(o.name) {
			case 'search':
				if( !o.searchtext || o.searchtext == '%' ){
					o.searchtext = "?";
				}	
				o.filter += ''' tagbalay_pangulo_name LIKE $P{searchtext} OR hin LIKE $P{searchtext} ''';	
				
				// if( !o.searchtext || o.searchtext == '%' ) o.searchtext = "%";
				break;
				
			//--------------- processing--------------------	
			// case 'idle':
				
			// 	o.state = 'idle';
			// 	o.filter += ''' AND dt.state = $P{state} AND dt.rgt = dt.lft + 1 AND (ug.org_objid = $P{userorgid} OR dto.org_objid = $P{userorgid} OR ug2.org_objid = $P{userorgid}) ''';
			// 	break;

			// case 'outgoing':
				
			// 	o.state = 'outgoing';
			// 	o.filter += ''' AND dt.state = $P{state} AND dt.rgt = dt.lft + 1 AND (ug.org_objid = $P{userorgid} OR ug2.org_objid = $P{userorgid}) ''';
			// 	break;

			// case 'enroute':
				
			// 	o.state = 'enroute';
			// 	o.filter += ''' AND dt.state = $P{state} AND dt.rgt = dt.lft + 1 AND (dto.org_objid = $P{userorgid} OR ug2.org_objid = $P{userorgid}) ''';
			// 	break;

			// case 'processing':
				
			// 	o.state = 'processing';
			// 	o.filter += ''' AND dt.state IN ('processing','linked') AND dt.rgt = dt.lft + 1 AND (ug.org_objid = $P{userorgid} OR dto.org_objid = $P{userorgid}) ''';
			// 	break;

			// case 'archived':
			// 	if( !o.searchtext || o.searchtext == '%' ){
			// 		o.searchtext = "?";
			// 	}
			// 	o.state = 'archived';
			// 	o.filter += ''' AND dt.state = $P{state} AND dt.rgt = dt.lft + 1 AND (ug.org_objid = $P{userorgid} OR dto.org_objid = $P{userorgid})''';
			// 	break;

			// case 'closed':
				
			// 	o.state = 'closed';
			// 	o.filter += ''' AND dt.state = $P{state} AND dt.rgt = dt.lft + 1 AND (ug.org_objid = $P{userorgid} OR dto.org_objid = $P{userorgid})''';
			// 	break;

			// case 'attached':
				
			// 	o.state = 'attached';
			// 	o.filter += ''' AND dt.state = $P{state} AND dt.rgt = dt.lft + 1 AND (ug.org_objid = $P{userorgid} OR dto.org_objid = $P{userorgid})''';
			// 	break;

			// case 'all':
			// 	if( !o.searchtext || o.searchtext == '%' ){
			// 		o.searchtext = "?";
			// 	}
				
			// 	o.filter += ''' AND dt.rgt = dt.lft + 1 ''';
			// 	break;

			default:
				break;
		}

		// if(o.dtfrom && o.dtto){
		// 	o.filter += '''AND d.recordlog_datecreated BETWEEN $P{dtfrom} AND ADDDATE($P{dtto},1) '''
		// }

		// if(o.documenttype){
		// 	o.documenttypeid =  o.documenttype.objid
		// 	o.filter += '''AND d.documenttype_objid = $P{documenttypeid} '''
		// }

	}

} 
