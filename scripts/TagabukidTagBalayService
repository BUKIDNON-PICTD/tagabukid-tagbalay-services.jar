import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;


class TagabukidtagbalayService
{
	
	@ActiveDB(value='hrmis_pds', em='tagabukid_hrmis')
	def em;

    // @ActiveDB(value='hrmis_pds', em='btacs')
	// def embtacs;
    
    @ActiveDB(value='beneficiary_profile')
	def emmain;

	@Env
	def env;

    // @ActiveDB(value='USERINFO', em='btacs')
	// def emu;


	@Service('DateService')
	def dtSvc 

	@Service("SequenceService")
	def seqSvc;

	@Service("PersistenceService")
    def persistenceSvc;

    @Service('QueryService')
	def querySvc

	@ProxyMethod
	def initCreate(){
		
		def entity                               = [:];
		    entity.objid                         = 'CIT' + new java.rmi.server.UID() +"-"+ dtSvc.getServerYear() +"-N"
		    entity.state                         = "DRAFT"
		    entity.height                        = 0
		    entity.weight                        = 0
		    entity.recordlog                     = [:]
		    entity.recordlog.datecreated         = dtSvc.serverDate
		    entity.recordlog.createdbyuserid     = (env.USERID?env.USERID: "SYSTEM")
		    entity.recordlog.createdbyuser       = (env.FULLNAME?env.FULLNAME: "SYSTEM")
		    entity.recordlog.dateoflastupdate    = dtSvc.serverDate
		    entity.recordlog.lastupdatedbyuserid = (env.USERID?env.USERID: "SYSTEM")
		    entity.recordlog.lastupdatedbyuser   = (env.FULLNAME?env.FULLNAME: "SYSTEM")
		    entity.tagbalay                       = [:]
		    entity.activeaddress                 = []
		    entity.activemembers                 = []
		    entity.activeassistances             = []
		    entity.surveys                       = []
		    entity.asmisinfos                    = []
        return entity;

	}

    @ProxyMethod
    def initSurvey(o){
        def entity                = [:]
            entity.objid          = 'CIS' + new java.rmi.server.UID() +"-"+ dtSvc.getServerYear() +"-N"
            entity.tagbalay        = o.tagbalay
            entity.maidenname     = o.middlename
            entity.nameextension  = o.nameextension
            entity.prenametitle   = o.prenametitle
            entity.postnametitle  = o.postnametitle
            entity.state          = 'DRAFT'
            entity.surveyno       = getSurveyNo(o);
            entity.surveytype     = 'NEW'
            entity.surveydate     = dtSvc.serverDate
            entity.surveyor_objid = (env.USERID?env.USERID: "SYSTEM")
            entity.surveyor_name  = (env.FULLNAME?env.FULLNAME: "SYSTEM")
            entity.surveyor_title = (env.JOBTITLE?env.JOBTITLE: "SYSTEM")
            entity.recordlog      = o.recordlog
            entity.lft            = 1
            entity.rgt            = 2
        return entity;
    }

    @ProxyMethod
	def createPDSfromEntity(){
        def p            = [_schemaname: 'entityindividual'];
            p.findBy     = [ 'tin':'forpds'];
        def entityforpds = querySvc.getList( p );
        entityforpds.each{
            def newpds           = initCreate();
                newpds.pdsno     = getPDSNo();
                newpds.versionno = getVersionNo()
            newpds.person.putAll(persistenceSvc.read([ _schemaname: 'entityindividual', objid: it.objid])) 
            newpds.person.middlename  = (newpds.person.middlename?newpds.person.middlename:"-");
            newpds.person.birthplace  = "?"
            newpds.person.civilstatus = "?"
            newpds.residential        = [address:newpds.person.address]
            newpds.permanent          = [address:newpds.person.address]
            newpds._schemaname        = 'hrmis_pds'
            
            persistenceSvc.create(newpds);
            // println 'PDS For ' + it.name + '...Created'
        } 

  
    
    }
    // def initPersonalInfo(o){
    //     return [
	// 		objid       : 'PDPI' + new java.rmi.server.UID(),
    //         versionid	: o.objid
    //     ]
    // }

    // def initVoluntaryWork(o){
    // 	return [
    // 		versionid	: o.objid
    // 	]
    // }

    // def initTraining(o){
    // 	return [
    // 		versionid	: o.objid
    // 	]
    // }


    // def initSkill(o){
    // 	return [
    // 		versionid 	: o.objid
    // 	]
    // }


    // def initReferences(o){
    // 	return [
    // 		versionid 	: o.objid
    // 	]
    // }

    // def initGovId(o){
    // 	return [
    // 		versionid	: o.objid
    // 	]
    // }



    @ProxyMethod
    public def getHIN(o){
		def appcode = "BUK"
		// def yr      = dtSvc.serverYear;
		// def mnth    = dtSvc.serverMonth;
		// def smon    = ( mnth < 10 ) ? "0"+mnth : mnth+"";
		def brgy    = o.tagbalay.address.barangay.objid;
        def prefix = appcode;
        if(brgy){
            prefix += brgy;
        }else{
            prefix += '059-NL'
        }
		
		return prefix+"-"+seqSvc.getNextFormattedSeries(prefix);
    }

    @ProxyMethod
    public def getSurveyNo(o){
		def appcode = "SNO"
		// def yr      = dtSvc.serverYear;
		// def mnth    = dtSvc.serverMonth;
		// def smon    = ( mnth < 10 ) ? "0"+mnth : mnth+"";
		// def brgy    = o.tagbalay.address.barangay.objid;
        def prefix = appcode;
        // if(brgy){
        //     prefix += brgy;
        // }else{
        //     prefix += '059-NL'
        // }
        prefix += o.controlno
		
		return prefix+"-"+seqSvc.getNextFormattedSeries(prefix);
    }

    @ProxyMethod
    public def getList( params ) {
        beforeList(params)
        return em.getList(params)
    } 

    @ProxyMethod
    public def getCountry( o ) {
        o.searchtext+='%'
        return em.getCountry( o );
    }

    @ProxyMethod
    public def loadQuestions( o ) {
        return em.getQuestions();
    }

    @ProxyMethod 
	public def formatAddress( def x, def delimiter) {
		// println objid
		// def municipality = emmain.findMunicipality([objid:objid])
        if (x.barangay){
            x.barangay = persistenceSvc.read([ _schemaname: 'barangay', objid:x.barangay.objid])
            x.barangay.parent = persistenceSvc.read([ _schemaname: 'municipality', objid:x.barangay.parentid])
            def txt1 = [x.unitno, x.bldgno, x.bldgname].findAll{ (it? true: false) }.join(" ").trim(); 
            def txt2 = [x.street, x.subdivision].findAll{ (it? true: false) }.join(" ").trim(); 
            def txt3 = [x.barangay?.name, x?.city, x.barangay.parent.name, x.province].findAll{ (it? true: false) }.join(", ").trim(); 
            return [txt1, txt2, txt3].findAll{ (it? true: false) }.join( delimiter ).trim();
        }
        return x.text;

	}

    //  @ProxyMethod 
	// public def createATTUserInfo(o) {

    //     // def p = [_schemaname: 'USERINFO'];
	// 	// p.findBy = [ 'pdsdid':r.objid];
	// 	// def userinfo =  querySvc.findFirst( p );

	// 	// userinfo.NAME = r.person.name
	// 	// userinfo.GENDER = r.person.gender
	
	// 	// userinfo.lname =r.person.lastname
	// 	// userinfo.fname =r.person.firstname
	// 	// userinfo.mname =r.person.middlename
    //     // INSERT INTO [dbo].[USERINFO]([USERID], [BADGENUMBER], [SSN], [NAME], [GENDER], [TITLE], [PAGER], [BIRTHDAY], [HIREDDAY], [STREET], [CITY], [STATE], [ZIP], [OPHONE], [FPHONE], [VERIFICATIONMETHOD], [DEFAULTDEPTID], [SECURITYFLAGS], [ATT], [INLATE], [OUTEARLY], [OVERTIME], [SEP], [HOLIDAY], [MINZU], [PASSWORD], [LUNCHDURATION], [MVerifyPass], [PHOTO], [Notes], [privilege], [InheritDeptSch], [InheritDeptSchClass], [AutoSchPlan], [MinAutoSchInterval], [RegisterOT], [InheritDeptRule], [EMPRIVILEGE], [CardNo], [Pin1], [FaceGroup], [AccGroup], [UseAccGroupTZ], [VerifyCode], [Expires], [ValidCount], [ValidTimeBegin], [ValidTimeEnd], [TimeZone1], [TimeZone2], [TimeZone3], [hrmisid], [lname], [fname], [mname], [pdsid]) VALUES (5000, '5000', NULL, 'RUFINO JOHN E. AGUILAR', 'MALE', 'CP II', NULL, '1989-08-04 00:00:00.000', NULL, 'fb27fd74-e9ec-4454-ac01-21de81a5f795', 'VALIDID', NULL, NULL, NULL, NULL, NULL, 2, 15, 1, 1, 1, 1, 1, 1, NULL, '	fDFnNz53', 1, '19178',NULL, NULL, 3, 1, 1, 1, 24, 1, 1, 0, '2141298163', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'pgb_employee19703', 'AGUILAR', 'RUFINO JOHN', 'Ecaldre', NULL);

    //     // emu.sqlContext.createExecutor('''
	// 	// 	INSERT INTO [dbo].[USERINFO](BADGENUMBER,
    //     //     NAME,GENDER,BIRTHDAY,DEFAULTDEPTID,ATT,INLATE,OUTEARLY,OVERTIME,SEP,HOLIDAY,MINZU,LUNCHDURATION,privilege,InheritDeptSch,InheritDeptSchClass,AutoSchPlan,MinAutoSchInterval,RegisterOT,InheritDeptRule,EMPRIVILEGE,lname,fname,mname,pdsid)
    //     //     VALUES (
    //     //         $P{BADGENUMBER},
    //     //         $P{NAME},
    //     //         $P{GENDER},
    //     //         $P{BIRTHDAY},
    //     //         $P{DEFAULTDEPTID},
    //     //         $P{ATT},
    //     //         $P{INLATE},
    //     //         $P{OUTEARLY},
    //     //         $P{OVERTIME},
    //     //         $P{SEP},
    //     //         $P{HOLIDAY},
    //     //         $P{MINZU},
    //     //         $P{LUNCHDURATION},
    //     //         $P{privilege},
    //     //         $P{InheritDeptSch},
    //     //         $P{InheritDeptSchClass},
    //     //         $P{AutoSchPlan},
    //     //         $P{MinAutoSchInterval},
    //     //         $P{RegisterOT},
    //     //         $P{InheritDeptRule},
    //     //         $P{EMPRIVILEGE},
    //     //         $P{lname},
    //     //         $P{fname},
    //     //         $P{mname},
    //     //         $P{pdsid})
	// 	// ''')
    //     //     .setParameter('BADGENUMBER', new java.rmi.server.UID().toString())
    //     //     .setParameter('NAME', o.person.name)
    //     //     .setParameter('GENDER', o.person.gender)
    //     //     .setParameter('BIRTHDAY', o.person.birthdate)
    //     //     .setParameter('DEFAULTDEPTID', 1)
    //     //     .setParameter('ATT', 1)
    //     //     .setParameter('INLATE', 1)
    //     //     .setParameter('OUTEARLY', 1)
    //     //     .setParameter('OVERTIME', 1)
    //     //     .setParameter('SEP', 1)
    //     //     .setParameter('HOLIDAY', 1)
    //     //     .setParameter('MINZU', 1)
    //     //     .setParameter('LUNCHDURATION', 1)
    //     //     .setParameter('privilege', 0)
    //     //     .setParameter('InheritDeptSch', 1)
    //     //     .setParameter('InheritDeptSchClass', 1)
    //     //     .setParameter('AutoSchPlan', 1)
    //     //     .setParameter('MinAutoSchInterval', 24)
    //     //     .setParameter('RegisterOT', 1)
    //     //     .setParameter('InheritDeptRule', 1)
    //     //     .setParameter('EMPRIVILEGE', 0)
    //     //     .setParameter('lname',  o.person.lastname)
    //     //     .setParameter('fname',  o.person.firstname)
    //     //     .setParameter('mname',  o.person.middlename)
    //     //     .setParameter('pdsid', o.objid)
	// 	//     .execute()
	// 	def userinfo = [
    //        USERID: embtacs.findMaxUserID().USERID,
    //        BADGENUMBER: embtacs.findMaxUserID().USERID,
    //        NAME : o.person.name,
    //        GENDER : o.person.gender,
    //        BIRTHDAY : o.person.birthdate,
    //        DEFAULTDEPTID : 1,
    //        ATT : 1,
    //        INLATE : 1,
    //        OUTEARLY : 1,
    //        OVERTIME : 1,
    //        SEP : 1,
    //        HOLIDAY : 1,
    //        MINZU : 1,
    //        LUNCHDURATION : 1,
    //        privilege : 0,
    //        InheritDeptSch : 1,
    //        InheritDeptSchClass : 1,
    //        AutoSchPlan : 1,
    //        MinAutoSchInterval : 24,
    //        RegisterOT : 1,
    //        InheritDeptRule : 1, 
    //        EMPRIVILEGE : 0,
    //        lname :  o.person.lastname,
    //        fname :  o.person.firstname,
    //        mname :  o.person.middlename,
    //        pdsid : o.objid
    //     ]
    // 	embtacs.insertUser(userinfo);
     
	// }


    @ProxyMethod 
	public def formatAddress( def x, def delimiter,def objid ) {
		// println objid
		def municipality = emmain.findMunicipality([objid:objid])
		// def barangay = persistenceSvc.read([ _schemaname: 'barangay', objid:x.barnagay.objid])
		def txt1 = [x.unitno, x.bldgno, x.bldgname].findAll{ (it? true: false) }.join(" ").trim(); 
		def txt2 = [x.street, x.subdivision].findAll{ (it? true: false) }.join(" ").trim(); 
		def txt3 = [x.barangay?.name, x.city, municipality.name, x.province].findAll{ (it? true: false) }.join(", ").trim(); 
		return [txt1, txt2, txt3].findAll{ (it? true: false) }.join( delimiter ).trim();
	}
//    [province:"PROVINCE OF BUKIDNON",type:"local",barangay:[code:"059-15-003",oldpin:null,city:null,indexno:"003",municipality:"MANOLO FORTICH",oldindexno:null,pin:"059-15-003",province:"PROVINCE OF BUKIDNON",objid:"059-15-003",name:"ALAE",state:"DRAFT",lgutype:"barangay",parent:[name:"MANOLO FORTICH",orgclass:"MUNICIPALITY",objid:"059-15"],provcity:[name:"PROVINCE OF BUKIDNON",objid:"059",indexno:"059"],munidistrict:[objid:"059-15",name:"MANOLO FORTICH",indexno:"15"]],text:"ALAE, \nPROVINCE OF BUKIDNON"]

}
